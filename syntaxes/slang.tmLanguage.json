{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "S-Lang",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#delimiters"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#shebang"
		},
		{
			"include": "#storage_types"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#raw_strings"
		}
	],
	"repository": {
		"delimiters": {
			"patterns": [
				{
					"match": "\\,|:",
					"name": "punctuation.other.slang"
				}
			]
		},
		"shebang": {
			"name": "comment.line.shebang.slang",
			"match": "\\A(#!).*(?=$)",
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.slang"
				}
			}
		},
		"storage_types": {
			"name": "storage.type.slang",
			"match": "\\b(Char|UChar|Short|Ushort|UShort|Integer|UInteger|Long|ULong|LLong|ULLong|Float|Double|Complex|String|BString|Struct|Ref|Null|Array|Assoc|List|DataType)_Type\\b"
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.slang",
					"match": "\\b(break|case|catch|continue|define|do|else|finally|_for|for|foreach|forever|if|ifnot|loop|return|switch|then|throw|try|typedef|using|while)\\b"
				},
				{
					"name": "keyword.operator.slang",
					"match": "%|\\*|/|-|\\+|--|\\+\\+|\\^|mod"
				},
				{
					"name": "keyword.operator.bitwise.slang",
					"match": "&|\\||~|shr|sht|xor"
				},
				{
					"name": "keyword.operator.logical.slang",
					"match": "&&|\\|\\||and|or|not"
				},
				{
					"name": "keyword.operator.assignment.slang",
					"match": "="
				},
				{
					"name": "keyword.operator.comparison.slang",
					"match": "!=|<=|>=|==|<|>"
				},
				{
					"name": "keyword.operator.assignment.compound.slang",
					"match": "\\+=|-=|\\*=|/=|&=|\\|="
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.slang",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.slang",
					"match": "\\\\(\\\\|[aefnrtv'\"]|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|d[0-2]\\d{,2}|d[3-9]\\d?)"
				},
				{
					"name": "invalid.illegal.unknown-escape.slang",
					"match": "\\\\."
				}
			]
		},
		"raw_strings": {
			"name": "string.quoted.backtick.slang",
			"begin": "`",
			"end": "`"
		},
		"comment": {
			"patterns": [
				{
					"include": "#block_comment"
				},
				{
					"include": "#line_comment"
				}
			]
		},
		"line_comment": {
			"patterns": [
				{
					"name": "comment.line.percentage.slang",
					"match": "(%).*$\\n?",
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.slang"
						}
					}
				}
			]
		},
		"block_comment": {
			"begin": "\\s*+(#<TAG>*)",
			"end": "#<\\/TAG>",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.comment.begin.slang"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.end.slang"
				}
			},
			"name": "comment.block.slang"
		}
	},
	"scopeName": "source.slang"
}